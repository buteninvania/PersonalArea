{"ast":null,"code":"var _jsxFileName = \"/home/butenin/dev/PracticeFrontend/src/Components/PersonalArea/ContactForms/Forms.jsx\";\nimport React from \"react\";\nimport f from \"./ContactsForm.module.css\";\nimport { Field, Form, Formik, useFormik } from \"formik\";\nimport i from \"../Contacts/contacts.module.css\";\nimport CloseCircleOutlined from \"@ant-design/icons/lib/icons/CloseCircleOutlined\";\nexport const ContactsSearchForm = ({\n  onFilterChanged\n}) => {\n  const submit = (values, {\n    setSubmitting\n  }) => {\n    onFilterChanged(values);\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: f.contactsSearchForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      term: ''\n    },\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"term\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }, \"Find\"))));\n};\nexport const AddContactsForm = ({\n  addContactSubmit\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      phoneNumber: '',\n      position: ''\n    },\n    validate,\n    onSubmit: values => {\n      addContactSubmit(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: f.addContactsForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }\n  }, \"Add a new employee?\")), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    placeholder: \"Name\",\n    className: f.inputForm + \" \" + (formik.errors.name ? f.errorInput : \"\"),\n    name: \"name\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    placeholder: \"Email\",\n    className: f.inputForm + \" \" + (formik.errors.email ? f.errorInput : \"\"),\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"phoneNumber\",\n    placeholder: \"Phone number\",\n    className: f.inputForm + \" \" + (formik.errors.phoneNumber ? f.errorInput : \"\"),\n    name: \"phoneNumber\",\n    type: \"tel\",\n    onChange: formik.handleChange,\n    value: formik.values.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"position\",\n    className: f.inputForm + \" \" + (formik.errors.position ? f.errorInput : \"\"),\n    name: \"position\",\n    onChange: formik.handleChange,\n    value: formik.values.position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \" Position selection\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"CTO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"CTO\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Project Manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Project Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Team Lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Team Lead\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Senior developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Senior developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Middle Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Middle Developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Junior Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Junior Developer\")), formik.errors.name || formik.errors.email || formik.errors.phoneNumber || formik.errors.position ? errorsMessage(formik.errors) : null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Add Contact\"));\n};\nexport const ContactEditForm = ({\n  data,\n  updateContact,\n  endEditMode\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      name: data.name,\n      email: data.email,\n      phoneNumber: data.phoneNumber,\n      position: data.position,\n      id: data.id\n    },\n    validate,\n    onSubmit: values => {\n      updateContact(values);\n      endEditMode();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: f.contactsEditForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), formik.errors.name ? /*#__PURE__*/React.createElement(\"div\", {\n    className: f.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 35\n    }\n  }, formik.errors.name) : null, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: f.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 36\n    }\n  }, formik.errors.email) : null, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"phoneNumber\",\n    name: \"phoneNumber\",\n    type: \"tel\",\n    onChange: formik.handleChange,\n    value: formik.values.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), formik.errors.phoneNumber ? /*#__PURE__*/React.createElement(\"div\", {\n    className: f.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 42\n    }\n  }, formik.errors.phoneNumber) : null, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"position\",\n    name: \"position\",\n    onChange: formik.handleChange,\n    value: formik.values.position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"CTO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"CTO\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Project Manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Project Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Team Lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Team Lead\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Senior developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Senior developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Middle Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Middle Developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Junior Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Junior Developer\")), formik.errors.position ? /*#__PURE__*/React.createElement(\"div\", {\n    className: f.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 39\n    }\n  }, formik.errors.position) : null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n    className: i.btn,\n    onClick: endEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"Enter name\";\n  } else if (values.name > 15) {\n    errors.name = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Enter email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.phoneNumber) {\n    errors.phoneNumber = \"Enter phone number\";\n  }\n\n  if (!values.position) {\n    errors.position = \"Choose a position\";\n  }\n\n  return errors;\n};\n\nconst errorsMessage = error => {\n  for (let mes in error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: f.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, error[mes]));\n  }\n};","map":{"version":3,"sources":["/home/butenin/dev/PracticeFrontend/src/Components/PersonalArea/ContactForms/Forms.jsx"],"names":["React","f","Field","Form","Formik","useFormik","i","CloseCircleOutlined","ContactsSearchForm","onFilterChanged","submit","values","setSubmitting","contactsSearchForm","term","isSubmitting","AddContactsForm","addContactSubmit","formik","initialValues","name","email","phoneNumber","position","validate","onSubmit","handleSubmit","addContactsForm","inputForm","errors","errorInput","handleChange","errorsMessage","ContactEditForm","data","updateContact","endEditMode","id","contactsEditForm","error","btn","test","mes"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport f from \"./ContactsForm.module.css\"\nimport {Field, Form, Formik, useFormik} from \"formik\"\nimport i from \"../Contacts/contacts.module.css\"\nimport CloseCircleOutlined from \"@ant-design/icons/lib/icons/CloseCircleOutlined\"\n\nexport const ContactsSearchForm = ({onFilterChanged}) => {\n    const submit = (values, {setSubmitting}) => {\n        onFilterChanged(values)\n        setSubmitting(false)\n    }\n\n    return (\n        <div className={f.contactsSearchForm}>\n            <Formik\n                initialValues={{ term: ''}}\n                onSubmit={submit}\n            >\n                {({ isSubmitting }) => (\n                    <Form>\n                        <Field type=\"text\" name=\"term\" />\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            Find\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\nexport const AddContactsForm = ({addContactSubmit}) => {\n    const formik = useFormik({\n        initialValues: {\n            name:'',\n            email: '',\n            phoneNumber: '',\n            position: '',\n        },\n        validate,\n        onSubmit: values => {\n            addContactSubmit(values)\n        },\n    })\n    return (\n        <form onSubmit={formik.handleSubmit} className={f.addContactsForm}>\n            <p><b>Add a new employee?</b></p>\n            <input id=\"name\"\n                   placeholder={\"Name\"}\n                   className={f.inputForm + \" \" + (formik.errors.name ? f.errorInput : \"\")}\n                   name=\"name\"\n                   type=\"text\"\n                   onChange={formik.handleChange}\n                   value={formik.values.name}/>\n            <input id=\"email\"\n                   placeholder={\"Email\"}\n                   className={f.inputForm + \" \" + (formik.errors.email ? f.errorInput : \"\")}\n                   name=\"email\"\n                   type=\"email\"\n                   onChange={formik.handleChange}\n                   value={formik.values.email}/>\n            <input id=\"phoneNumber\"\n                   placeholder={\"Phone number\"}\n                   className={f.inputForm + \" \" + (formik.errors.phoneNumber ? f.errorInput : \"\")}\n                   name=\"phoneNumber\"\n                   type=\"tel\"\n                   onChange={formik.handleChange}\n                   value={formik.values.phoneNumber}/>\n            <select id=\"position\"\n                    className={f.inputForm + \" \" + (formik.errors.position ? f.errorInput : \"\")}\n                    name=\"position\"\n                    onChange={formik.handleChange}\n                    value={formik.values.position}>\n                <option value=\"\" disabled> Position selection</option>\n                <option value=\"Owner\">Owner</option>\n                <option value=\"CTO\">CTO</option>\n                <option value=\"Project Manager\">Project Manager</option>\n                <option value=\"Team Lead\">Team Lead</option>\n                <option value=\"Senior developer\">Senior developer</option>\n                <option value=\"Middle Developer\">Middle Developer</option>\n                <option value=\"Junior Developer\">Junior Developer</option>\n            </select>\n            {formik.errors.name || formik.errors.email || formik.errors.phoneNumber || formik.errors.position\n                ? errorsMessage(formik.errors)\n                : null}\n            <button type=\"submit\">Add Contact</button>\n        </form>\n\n    )\n}\nexport const ContactEditForm = ({data, updateContact, endEditMode}) => {\n    const formik = useFormik({\n        initialValues: {\n            name: data.name,\n            email: data.email,\n            phoneNumber: data.phoneNumber,\n            position: data.position,\n            id: data.id\n        },\n        validate,\n        onSubmit: values => {\n            updateContact(values)\n            endEditMode()\n        },\n    })\n\n    return (\n        <form onSubmit={formik.handleSubmit} className={f.contactsEditForm}>\n            <input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.name}/>\n            {formik.errors.name ? <div className={f.error}>{formik.errors.name}</div> : null}\n            <input id=\"email\" name=\"email\" type=\"email\" onChange={formik.handleChange} value={formik.values.email}/>\n            {formik.errors.email ? <div className={f.error}>{formik.errors.email}</div> : null}\n            <input id=\"phoneNumber\" name=\"phoneNumber\" type=\"tel\" onChange={formik.handleChange} value={formik.values.phoneNumber}/>\n            {formik.errors.phoneNumber ? <div className={f.error}>{formik.errors.phoneNumber}</div> : null}\n            <select id=\"position\" name=\"position\" onChange={formik.handleChange} value={formik.values.position}>\n                <option value=\"Owner\">Owner</option>\n                <option value=\"CTO\">CTO</option>\n                <option value=\"Project Manager\">Project Manager</option>\n                <option value=\"Team Lead\">Team Lead</option>\n                <option value=\"Senior developer\">Senior developer</option>\n                <option value=\"Middle Developer\">Middle Developer</option>\n                <option value=\"Junior Developer\">Junior Developer</option>\n            </select>\n            {formik.errors.position ? <div className={f.error}>{formik.errors.position}</div> : null}\n            <button type=\"submit\">Edit</button>\n            <CloseCircleOutlined className={i.btn} onClick={endEditMode}/>\n        </form>\n\n    )\n}\n\nconst validate = (values) => {\n    const errors = {}\n    if (!values.name) {\n        errors.name = \"Enter name\"\n    } else if (values.name > 15) {\n        errors.name = 'Must be 15 characters or less'\n    }\n    if (!values.email) {\n        errors.email = 'Enter email';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n    }\n    if (!values.phoneNumber) {\n        errors.phoneNumber = \"Enter phone number\"\n    }\n    if (!values.position) {\n        errors.position = \"Choose a position\"\n    }\n    return errors\n}\nconst errorsMessage = (error) => {\n    for (let mes in error) {\n        return (\n            <div className={f.error}>\n                <b>{error[mes]}</b>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}