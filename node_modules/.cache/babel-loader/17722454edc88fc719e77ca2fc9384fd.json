{"ast":null,"code":"import { coreAPI } from \"./api\";\nexport const contactsAPI = {\n  getContacts(term = \"\") {\n    return coreAPI.get(`contacts?q=${term}`).then(res => res.data);\n  },\n\n  addContacts(name, email, phoneNumber, position) {\n    return coreAPI.post(`contacts`, {\n      name,\n      email,\n      phoneNumber,\n      position\n    }).then(res => res.data);\n  },\n\n  deleteContact(userID) {\n    return coreAPI.delete(`contacts/${userID}`);\n  },\n\n  updateContacts(id, name, email, phoneNumber, position) {\n    return coreAPI.put(`contacts/${id}/`, {\n      name,\n      email,\n      phoneNumber,\n      position\n    });\n  }\n\n};","map":{"version":3,"sources":["/home/butenin/dev/PracticeFrontend/Frontend/src/API/contacts-api.js"],"names":["coreAPI","contactsAPI","getContacts","term","get","then","res","data","addContacts","name","email","phoneNumber","position","post","deleteContact","userID","delete","updateContacts","id","put"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,OAAtB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,WAAW,CAACC,IAAI,GAAC,EAAN,EAAU;AACjB,WAAOH,OAAO,CAACI,GAAR,CAAa,cAAaD,IAAK,EAA/B,EACFE,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IADd,CAAP;AAEH,GAJsB;;AAKvBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAcC,WAAd,EAA2BC,QAA3B,EAAqC;AAC5C,WAAOZ,OAAO,CAACa,IAAR,CAAc,UAAd,EAAyB;AAACJ,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,WAAd;AAA2BC,MAAAA;AAA3B,KAAzB,EACFP,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IADd,CAAP;AAEH,GARsB;;AASvBO,EAAAA,aAAa,CAACC,MAAD,EAAS;AAClB,WAAOf,OAAO,CAACgB,MAAR,CAAgB,YAAWD,MAAO,EAAlC,CAAP;AACH,GAXsB;;AAYvBE,EAAAA,cAAc,CAACC,EAAD,EAAIT,IAAJ,EAAUC,KAAV,EAAiBC,WAAjB,EAA8BC,QAA9B,EAAwC;AAClD,WAAOZ,OAAO,CAACmB,GAAR,CAAa,YAAWD,EAAG,GAA3B,EAA+B;AAACT,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,WAAd;AAA2BC,MAAAA;AAA3B,KAA/B,CAAP;AACH;;AAdsB,CAApB","sourcesContent":["import {coreAPI} from \"./api\";\n\nexport const contactsAPI = {\n    getContacts(term=\"\") {\n        return coreAPI.get(`contacts?q=${term}`)\n            .then(res => res.data)\n    },\n    addContacts(name, email, phoneNumber, position) {\n        return coreAPI.post(`contacts`, {name, email, phoneNumber, position})\n            .then(res => res.data)\n    },\n    deleteContact(userID) {\n        return coreAPI.delete(`contacts/${userID}`)\n    },\n    updateContacts(id,name, email, phoneNumber, position) {\n        return coreAPI.put(`contacts/${id}/`, {name, email, phoneNumber, position})\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}