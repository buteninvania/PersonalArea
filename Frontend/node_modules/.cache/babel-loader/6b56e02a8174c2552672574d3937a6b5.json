{"ast":null,"code":"var _jsxFileName = \"/home/butenin/dev/PracticeFrontend/Frontend/src/Components/PersonalArea/ContactForms/Forms.jsx\";\nimport React from \"react\";\nimport f from \"./ContactsForm.module.css\";\nimport { Field, Form, Formik } from \"formik\";\nexport const AddContactsForm = ({\n  addContactSubmit\n}) => {\n  const submit = (values, {\n    setSubmitting\n  }) => {\n    addContactSubmit(values);\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: f.addContactsForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      phoneNumber: '',\n      position: ''\n    },\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting,\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    validate: validateName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }), errors.name && touched.name ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 56\n    }\n  }, \" \", errors.name, \" \") : null, /*#__PURE__*/React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    validate: validateEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 58\n    }\n  }, \" \", errors.email, \" \") : null, /*#__PURE__*/React.createElement(Field, {\n    type: \"tel\",\n    name: \"phoneNumber\",\n    placeholder: \"Phone Number\",\n    validate: validateNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }), errors.phoneNumber && touched.phoneNumber ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 70\n    }\n  }, \" \", errors.phoneNumber, \" \") : null, /*#__PURE__*/React.createElement(Field, {\n    as: \"select\",\n    name: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"CTO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, \"CTO\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Project Manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, \"Project Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Team Lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }, \"Team Lead\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Senior developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, \"Senior developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Middle Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, \"Middle Developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Junior Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, \"Junior Developer\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Add contact\"))));\n};\nexport const ContactEditForm = ({\n  updateContact,\n  endEditMode,\n  id\n}) => {\n  const submit = (values, {\n    setSubmitting\n  }) => {\n    values.id = id;\n    updateContact(values);\n    setSubmitting(false);\n    endEditMode();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: f.addContactsForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      phoneNumber: '',\n      position: ''\n    },\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting,\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    validate: validateName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), errors.name && touched.name ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 56\n    }\n  }, \" \", errors.name, \" \") : null, /*#__PURE__*/React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    validate: validateEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 58\n    }\n  }, \" \", errors.email, \" \") : null, /*#__PURE__*/React.createElement(Field, {\n    type: \"tel\",\n    name: \"phoneNumber\",\n    placeholder: \"Phone Number\",\n    validate: validateNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), errors.phoneNumber && touched.phoneNumber ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 70\n    }\n  }, \" \", errors.phoneNumber, \" \") : null, /*#__PURE__*/React.createElement(Field, {\n    as: \"select\",\n    name: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"CTO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"CTO\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Project Manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Project Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Team Lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"Team Lead\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Senior developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Senior developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Middle Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Middle Developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Junior Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"Junior Developer\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"Add contact\"))));\n};\n\nconst validateName = value => {\n  let errorMessage;\n\n  if (value == \"\") {\n    errorMessage = 'Введите имя';\n  } else if (value.length < 2) {\n    errorMessage = 'Имя контакта не менее 2 символов';\n  } else if (/[^a-zA-Zа-яА-Я]/.test(value)) {\n    errorMessage = 'В имени пользователя разрешены только a-z, A-Z, А-Я, а-я ';\n  }\n\n  return errorMessage;\n};\n\nconst validateEmail = value => {\n  let errorMessage;\n\n  if (value == \"\") {\n    errorMessage = 'Введите email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    errorMessage = 'Не валидный Email';\n  }\n\n  return errorMessage;\n};\n\nconst validateNumber = value => {\n  let errorMessage;\n\n  if (value == '') {\n    errorMessage = 'Введите номер телефона';\n  }\n\n  return errorMessage;\n};","map":{"version":3,"sources":["/home/butenin/dev/PracticeFrontend/Frontend/src/Components/PersonalArea/ContactForms/Forms.jsx"],"names":["React","f","Field","Form","Formik","AddContactsForm","addContactSubmit","submit","values","setSubmitting","addContactsForm","name","email","phoneNumber","position","isSubmitting","errors","touched","validateName","validateEmail","validateNumber","ContactEditForm","updateContact","endEditMode","id","value","errorMessage","length","test"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport f from \"./ContactsForm.module.css\"\nimport {Field, Form, Formik} from \"formik\";\n\nexport const AddContactsForm = ({addContactSubmit}) => {\n    const submit = (values, {setSubmitting}) => {\n        addContactSubmit(values)\n        setSubmitting(false)\n    }\n    return (\n        <div className={f.addContactsForm}>\n            <Formik\n                initialValues={{name: '',\n                                email: '',\n                                phoneNumber: '',\n                                position: ''\n                }}\n                onSubmit={submit}\n            >\n                {({ isSubmitting, errors, touched }) => (\n                    <Form>\n                        <Field type=\"text\" name=\"name\" placeholder = \"Name\" validate={validateName} />\n                        {errors.name && touched.name ? <div> {errors.name} </div> : null}\n                        <Field type=\"email\" name=\"email\" placeholder = \"Email\" validate={validateEmail} />\n                        {errors.email && touched.email ? <div> {errors.email} </div> : null}\n                        <Field type=\"tel\" name=\"phoneNumber\" placeholder = \"Phone Number\" validate={validateNumber}/>\n                        {errors.phoneNumber && touched.phoneNumber ? <div> {errors.phoneNumber} </div> : null}\n                        <Field as=\"select\" name=\"position\">\n                            <option value=\"Owner\">Owner</option>\n                            <option value=\"CTO\">CTO</option>\n                            <option value=\"Project Manager\">Project Manager</option>\n                            <option value=\"Team Lead\">Team Lead</option>\n                            <option value=\"Senior developer\">Senior developer</option>\n                            <option value=\"Middle Developer\">Middle Developer</option>\n                            <option value=\"Junior Developer\">Junior Developer</option>\n                        </Field>\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            Add contact\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\nexport const ContactEditForm = ({updateContact, endEditMode, id}) => {\n    const submit = (values, {setSubmitting}) => {\n        values.id = id\n        updateContact(values)\n        setSubmitting(false)\n        endEditMode()\n    }\n    return (\n        <div className={f.addContactsForm}>\n            <Formik\n                initialValues={{name: '',\n                    email: '',\n                    phoneNumber: '',\n                    position: ''\n                }}\n                onSubmit={submit}\n            >\n                {({ isSubmitting, errors, touched }) => (\n                    <Form>\n                        <Field type=\"text\" name=\"name\" placeholder = \"Name\" validate={validateName} />\n                        {errors.name && touched.name ? <div> {errors.name} </div> : null}\n                        <Field type=\"email\" name=\"email\" placeholder = \"Email\" validate={validateEmail} />\n                        {errors.email && touched.email ? <div> {errors.email} </div> : null}\n                        <Field type=\"tel\" name=\"phoneNumber\" placeholder = \"Phone Number\" validate={validateNumber}/>\n                        {errors.phoneNumber && touched.phoneNumber ? <div> {errors.phoneNumber} </div> : null}\n                        <Field as=\"select\" name=\"position\">\n                            <option value=\"Owner\">Owner</option>\n                            <option value=\"CTO\">CTO</option>\n                            <option value=\"Project Manager\">Project Manager</option>\n                            <option value=\"Team Lead\">Team Lead</option>\n                            <option value=\"Senior developer\">Senior developer</option>\n                            <option value=\"Middle Developer\">Middle Developer</option>\n                            <option value=\"Junior Developer\">Junior Developer</option>\n                        </Field>\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            Add contact\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\n\nconst validateName = (value) => {\n    let errorMessage\n    if (value == \"\") {\n        errorMessage = 'Введите имя';\n    }  else if (value.length < 2 ) {\n        errorMessage = 'Имя контакта не менее 2 символов';\n    }   else if (/[^a-zA-Zа-яА-Я]/.test(value)) {\n        errorMessage = 'В имени пользователя разрешены только a-z, A-Z, А-Я, а-я ';\n    }\n    return errorMessage\n}\nconst validateEmail = (value) => {\n    let errorMessage\n    if(value == \"\") {\n        errorMessage = 'Введите email';\n    }\n    else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        errorMessage = 'Не валидный Email';\n    }\n    return errorMessage\n}\nconst validateNumber = (value) => {\n    let errorMessage\n    if(value == '') {\n        errorMessage = 'Введите номер телефона';\n    }\n    return errorMessage\n}\n"]},"metadata":{},"sourceType":"module"}