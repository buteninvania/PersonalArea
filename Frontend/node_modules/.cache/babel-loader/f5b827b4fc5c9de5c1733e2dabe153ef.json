{"ast":null,"code":"import { getAuthUserData } from \"./auth-reducer\";\nconst initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FrontEnd/practice/INITIALIZED_SUCCESS\":\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const actions = {\n  initializedSuccess: () => ({\n    type: \"FrontEnd/practice/INITIALIZED_SUCCESS\"\n  })\n};\nexport const initializeApp = () => dispatch => {\n  const promise = dispatch(getAuthUserData());\n  promise.then(() => {\n    dispatch(actions.initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/home/butenin/dev/PracticeFrontend/Frontend/src/Redux/app-reduser.jsx"],"names":["getAuthUserData","initialState","initialized","appReducer","state","action","type","actions","initializedSuccess","initializeApp","dispatch","promise","then"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,gBAA9B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,uCAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAYA,OAAO,MAAMG,OAAO,GAAG;AACnBC,EAAAA,kBAAkB,EAAE,OAAO;AAACF,IAAAA,IAAI,EAAE;AAAP,GAAP;AADD,CAAhB;AAIP,OAAO,MAAMG,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7C,QAAMC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAxB;AACAW,EAAAA,OAAO,CAACC,IAAR,CAAa,MAAM;AACfF,IAAAA,QAAQ,CAACH,OAAO,CAACC,kBAAR,EAAD,CAAR;AACH,GAFD;AAGH,CALM;AAOP,eAAeL,UAAf","sourcesContent":["import {getAuthUserData} from \"./auth-reducer\";\n\nconst initialState = {\n    initialized: false,\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"FrontEnd/practice/INITIALIZED_SUCCESS\":\n            return {\n                ...state,\n                initialized: true,\n            }\n        default:\n            return state\n    }\n}\n\nexport const actions = {\n    initializedSuccess: () => ({type: \"FrontEnd/practice/INITIALIZED_SUCCESS\"})\n}\n\nexport const initializeApp = () => (dispatch) => {\n    const promise = dispatch(getAuthUserData())\n    promise.then(() => {\n        dispatch(actions.initializedSuccess())\n    })\n}\n\nexport default appReducer"]},"metadata":{},"sourceType":"module"}