{"ast":null,"code":"var _jsxFileName = \"/home/butenin/dev/PracticeFrontend/Frontend/src/Components/PersonalArea/ContactForms/Forms.jsx\";\nimport React from \"react\";\nimport f from \"./ContactsForm.module.css\";\nimport { Field, Form, Formik, useFormik } from \"formik\";\nexport const ContactsSearchForm = ({\n  onFilterChanged\n}) => {\n  const submit = (values, {\n    setSubmitting\n  }) => {\n    onFilterChanged(values);\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: f.contactsSearchForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      term: ''\n    },\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"term\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, \"Find\"))));\n}; // const FormContact = ({ submit, name, endEditMode}) => {\n//\n//     return (\n//         <Formik\n//             initialValues={{\n//                 name: '',\n//                 email: '',\n//                 phoneNumber: '',\n//                 position: '',\n//             }}\n//             onSubmit={submit}\n//         >\n//             {({ isSubmitting, errors, touched }) => (\n//                 <Form>\n//                     <Field className={f.name} type=\"text\" name=\"name\" placeholder = \"Name\" validate={validateName} />\n//                     {errors.name && touched.name ? <div className={f.error}> {errors.name} </div> : null}\n//                     <Field className={f.email} type=\"email\" name=\"email\" placeholder = \"Email\" validate={validateEmail} />\n//                     {errors.email && touched.email ? <div className={f.error}> {errors.email} </div> : null}\n//                     <Field className={f.phone} type=\"tel\" name=\"phoneNumber\" placeholder = \"Phone Number\" validate={validateNumber}/>\n//                     {errors.phoneNumber && touched.phoneNumber ? <div className={f.error}> {errors.phoneNumber} </div> : null}\n//                     <Field className={f.position} as=\"select\" name=\"position\">\n//                         <option value=\"Owner\">Owner</option>\n//                         <option value=\"CTO\">CTO</option>\n//                         <option value=\"Project Manager\">Project Manager</option>\n//                         <option value=\"Team Lead\">Team Lead</option>\n//                         <option value=\"Senior developer\">Senior developer</option>\n//                         <option value=\"Middle Developer\">Middle Developer</option>\n//                         <option value=\"Junior Developer\">Junior Developer</option>\n//                     </Field>\n//                     <button type=\"submit\" disabled={isSubmitting}>\n//                         {name === \"Added\"\n//                             ? \"Add contact\"\n//                             : \"Edit contact\"\n//                         }\n//                     </button>\n//                     {name === 'Edit'\n//                         ? <button onClick={endEditMode}>Back</button>\n//                         : null\n//                     }\n//                 </Form>\n//             )}\n//         </Formik>\n//     )\n// }\n// const validateName = (value) => {\n//     let errorMessage\n//     if (value === \"\") {\n//         errorMessage = 'Введите имя';\n//     }  else if (value.length < 2 ) {\n//         errorMessage = 'Имя контакта не менее 2 символов';\n//     }   else if (/[^a-zA-Zа-яА-Я]/.test(value)) {\n//         errorMessage = 'В имени пользователя разрешены только a-z, A-Z, А-Я, а-я ';\n//     }\n//     return errorMessage\n// }\n// const validateEmail = (value) => {\n//     let errorMessage\n//     if(value === \"\") {\n//         errorMessage = 'Введите email';\n//     }\n//     else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n//         errorMessage = 'Не валидный Email';\n//     }\n//     return errorMessage\n// }\n// const validateNumber = (value) => {\n//     let errorMessage\n//     if(value === '') {\n//         errorMessage = 'Введите номер телефона';\n//     }\n//     return errorMessage\n// }\n\nexport const AddContactsForm = ({\n  addContactSubmit\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      phoneNumber: '',\n      position: ''\n    },\n    validate,\n    onSubmit: values => {\n      addContactSubmit(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: f.addContactsForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 16\n    }\n  }, \"Add a new employee?\")), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    placeholder: \"Name\",\n    className: f.inputForm + \" \" + (formik.errors.name ? f.errorInput : \"\"),\n    name: \"name\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    placeholder: \"Email\",\n    className: f.email,\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"phoneNumber\",\n    placeholder: \"Phone number\",\n    className: f.phone,\n    name: \"phoneNumber\",\n    type: \"tel\",\n    onChange: formik.handleChange,\n    value: formik.values.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"position\",\n    className: f.position,\n    name: \"position\",\n    onChange: formik.handleChange,\n    value: formik.values.position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \" Position selection\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"CTO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"CTO\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Project Manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Project Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Team Lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Team Lead\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Senior developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Senior developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Middle Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Middle Developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Junior Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"Junior Developer\")), formik.errors.name || formik.errors.email || formik.errors.phoneNumber || formik.errors.position ? errorsMessage(formik.errors) : null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Add Contact\"));\n};\nexport const ContactEditForm = ({\n  data,\n  updateContact,\n  endEditMode\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      name: data.name,\n      email: data.email,\n      phoneNumber: data.phoneNumber,\n      position: data.position,\n      id: data.id\n    },\n    validate,\n    onSubmit: values => {\n      updateContact(values);\n      endEditMode();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), formik.errors.name ? /*#__PURE__*/React.createElement(\"div\", {\n    className: f.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 35\n    }\n  }, formik.errors.name) : null, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 36\n    }\n  }, formik.errors.email) : null, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"phoneNumber\",\n    name: \"phoneNumber\",\n    type: \"tel\",\n    onChange: formik.handleChange,\n    value: formik.values.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), formik.errors.phoneNumber ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 42\n    }\n  }, formik.errors.phoneNumber) : null, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"position\",\n    name: \"position\",\n    onChange: formik.handleChange,\n    value: formik.values.position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"CTO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"CTO\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Project Manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"Project Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Team Lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Team Lead\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Senior developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"Senior developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Middle Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, \"Middle Developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Junior Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"Junior Developer\")), formik.errors.position ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 39\n    }\n  }, formik.errors.position) : null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: endEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"End Edit\"));\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"Enter name\";\n  } else if (values.name > 15) {\n    errors.name = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Enter email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.phoneNumber) {\n    errors.phoneNumber = \"Enter phone number\";\n  }\n\n  if (!values.position) {\n    errors.position = \"Choose a position\";\n  }\n\n  return errors;\n};\n\nconst errorsMessage = error => {\n  for (let mes in error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: f.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, error[mes]));\n  }\n};","map":{"version":3,"sources":["/home/butenin/dev/PracticeFrontend/Frontend/src/Components/PersonalArea/ContactForms/Forms.jsx"],"names":["React","f","Field","Form","Formik","useFormik","ContactsSearchForm","onFilterChanged","submit","values","setSubmitting","contactsSearchForm","term","isSubmitting","AddContactsForm","addContactSubmit","formik","initialValues","name","email","phoneNumber","position","validate","onSubmit","handleSubmit","addContactsForm","inputForm","errors","errorInput","handleChange","phone","errorsMessage","ContactEditForm","data","updateContact","endEditMode","id","error","test","mes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport f from \"./ContactsForm.module.css\"\nimport {Field, Form, Formik, useFormik} from \"formik\";\n\n\n\n\nexport const ContactsSearchForm = ({onFilterChanged}) => {\n    const submit = (values, {setSubmitting}) => {\n        onFilterChanged(values)\n        setSubmitting(false)\n    }\n\n    return (\n        <div className={f.contactsSearchForm}>\n            <Formik\n                initialValues={{ term: ''}}\n                onSubmit={submit}\n            >\n                {({ isSubmitting }) => (\n                    <Form>\n                        <Field type=\"text\" name=\"term\" />\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            Find\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\n// const FormContact = ({ submit, name, endEditMode}) => {\n//\n//     return (\n//         <Formik\n//             initialValues={{\n//                 name: '',\n//                 email: '',\n//                 phoneNumber: '',\n//                 position: '',\n//             }}\n//             onSubmit={submit}\n//         >\n//             {({ isSubmitting, errors, touched }) => (\n//                 <Form>\n//                     <Field className={f.name} type=\"text\" name=\"name\" placeholder = \"Name\" validate={validateName} />\n//                     {errors.name && touched.name ? <div className={f.error}> {errors.name} </div> : null}\n//                     <Field className={f.email} type=\"email\" name=\"email\" placeholder = \"Email\" validate={validateEmail} />\n//                     {errors.email && touched.email ? <div className={f.error}> {errors.email} </div> : null}\n//                     <Field className={f.phone} type=\"tel\" name=\"phoneNumber\" placeholder = \"Phone Number\" validate={validateNumber}/>\n//                     {errors.phoneNumber && touched.phoneNumber ? <div className={f.error}> {errors.phoneNumber} </div> : null}\n//                     <Field className={f.position} as=\"select\" name=\"position\">\n//                         <option value=\"Owner\">Owner</option>\n//                         <option value=\"CTO\">CTO</option>\n//                         <option value=\"Project Manager\">Project Manager</option>\n//                         <option value=\"Team Lead\">Team Lead</option>\n//                         <option value=\"Senior developer\">Senior developer</option>\n//                         <option value=\"Middle Developer\">Middle Developer</option>\n//                         <option value=\"Junior Developer\">Junior Developer</option>\n//                     </Field>\n//                     <button type=\"submit\" disabled={isSubmitting}>\n//                         {name === \"Added\"\n//                             ? \"Add contact\"\n//                             : \"Edit contact\"\n//                         }\n//                     </button>\n//                     {name === 'Edit'\n//                         ? <button onClick={endEditMode}>Back</button>\n//                         : null\n//                     }\n//                 </Form>\n//             )}\n//         </Formik>\n//     )\n// }\n\n// const validateName = (value) => {\n//     let errorMessage\n//     if (value === \"\") {\n//         errorMessage = 'Введите имя';\n//     }  else if (value.length < 2 ) {\n//         errorMessage = 'Имя контакта не менее 2 символов';\n//     }   else if (/[^a-zA-Zа-яА-Я]/.test(value)) {\n//         errorMessage = 'В имени пользователя разрешены только a-z, A-Z, А-Я, а-я ';\n//     }\n//     return errorMessage\n// }\n// const validateEmail = (value) => {\n//     let errorMessage\n//     if(value === \"\") {\n//         errorMessage = 'Введите email';\n//     }\n//     else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n//         errorMessage = 'Не валидный Email';\n//     }\n//     return errorMessage\n// }\n// const validateNumber = (value) => {\n//     let errorMessage\n//     if(value === '') {\n//         errorMessage = 'Введите номер телефона';\n//     }\n//     return errorMessage\n// }\n\n\n\nexport const AddContactsForm = ({addContactSubmit}) => {\n    const formik = useFormik({\n        initialValues: {\n            name:'',\n            email: '',\n            phoneNumber: '',\n            position: '',\n        },\n        validate,\n        onSubmit: values => {\n            addContactSubmit(values)\n        },\n    })\n    return (\n        <form onSubmit={formik.handleSubmit} className={f.addContactsForm}>\n            <p><b>Add a new employee?</b></p>\n            <input id=\"name\"\n                   placeholder={\"Name\"}\n                   className={f.inputForm + \" \" + (formik.errors.name ? f.errorInput : \"\")}\n                   name=\"name\"\n                   type=\"text\"\n                   onChange={formik.handleChange}\n                   value={formik.values.name}/>\n            <input id=\"email\" placeholder={\"Email\"} className={f.email} name=\"email\" type=\"email\" onChange={formik.handleChange} value={formik.values.email}/>\n            <input id=\"phoneNumber\" placeholder={\"Phone number\"} className={f.phone} name=\"phoneNumber\" type=\"tel\" onChange={formik.handleChange} value={formik.values.phoneNumber}/>\n            <select id=\"position\" className={f.position} name=\"position\" onChange={formik.handleChange} value={formik.values.position}>\n                <option value=\"\" disabled> Position selection</option>\n                <option value=\"Owner\">Owner</option>\n                <option value=\"CTO\">CTO</option>\n                <option value=\"Project Manager\">Project Manager</option>\n                <option value=\"Team Lead\">Team Lead</option>\n                <option value=\"Senior developer\">Senior developer</option>\n                <option value=\"Middle Developer\">Middle Developer</option>\n                <option value=\"Junior Developer\">Junior Developer</option>\n            </select>\n            {formik.errors.name || formik.errors.email || formik.errors.phoneNumber || formik.errors.position\n                ? errorsMessage(formik.errors)\n                : null}\n            <button type=\"submit\">Add Contact</button>\n        </form>\n\n    )\n}\n\nexport const ContactEditForm = ({data, updateContact, endEditMode}) => {\n    const formik = useFormik({\n        initialValues: {\n            name: data.name,\n            email: data.email,\n            phoneNumber: data.phoneNumber,\n            position: data.position,\n            id: data.id\n        },\n        validate,\n        onSubmit: values => {\n            updateContact(values)\n            endEditMode()\n        },\n    })\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <input id=\"name\" name=\"name\" type=\"text\" onChange={formik.handleChange} value={formik.values.name}/>\n            {formik.errors.name ? <div className={f.error}>{formik.errors.name}</div> : null}\n            <input id=\"email\" name=\"email\" type=\"email\" onChange={formik.handleChange} value={formik.values.email}/>\n            {formik.errors.email ? <div>{formik.errors.email}</div> : null}\n            <input id=\"phoneNumber\" name=\"phoneNumber\" type=\"tel\" onChange={formik.handleChange} value={formik.values.phoneNumber}/>\n            {formik.errors.phoneNumber ? <div>{formik.errors.phoneNumber}</div> : null}\n            <select id=\"position\" name=\"position\" onChange={formik.handleChange} value={formik.values.position}>\n                <option value=\"Owner\">Owner</option>\n                <option value=\"CTO\">CTO</option>\n                <option value=\"Project Manager\">Project Manager</option>\n                <option value=\"Team Lead\">Team Lead</option>\n                <option value=\"Senior developer\">Senior developer</option>\n                <option value=\"Middle Developer\">Middle Developer</option>\n                <option value=\"Junior Developer\">Junior Developer</option>\n            </select>\n            {formik.errors.position ? <div>{formik.errors.position}</div> : null}\n            <button type=\"submit\">Edit</button>\n            <span onClick={endEditMode}>End Edit</span>\n        </form>\n\n    )\n}\nconst validate = (values) => {\n    const errors = {}\n    if (!values.name) {\n        errors.name = \"Enter name\"\n    } else if (values.name > 15) {\n        errors.name = 'Must be 15 characters or less'\n    }\n    if (!values.email) {\n        errors.email = 'Enter email';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n    }\n    if (!values.phoneNumber) {\n        errors.phoneNumber = \"Enter phone number\"\n    }\n    if (!values.position) {\n        errors.position = \"Choose a position\"\n    }\n    return errors\n}\nconst errorsMessage = (error) => {\n    for (let mes in error) {\n        return (\n            <div className={f.error}>\n                <b>{error[mes]}</b>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}