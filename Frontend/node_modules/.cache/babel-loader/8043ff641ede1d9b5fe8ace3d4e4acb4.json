{"ast":null,"code":"var _jsxFileName = \"/home/butenin/dev/PracticeFrontend/Frontend/src/Components/PersonalArea/Contacts/Contacts.jsx\";\nimport React, { useState } from \"react\";\nimport c from \"./contacts.module.css\";\nimport f from \"../AddContactsForm/addContactsForm.module.css\";\nimport { Field, Form, Formik } from \"formik\";\n\nconst Contacts = ({\n  deleteContact,\n  contacts,\n  updateContact\n}) => {\n  const [editMode, setEditMode] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: c.contactsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, !editMode ? /*#__PURE__*/React.createElement(ContactData, {\n    deleteContact: deleteContact,\n    goToEditMode: () => setEditMode(true),\n    contacts: contacts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(ContactEditForm, {\n    updateContact: updateContact,\n    endEditMode: () => setEditMode(false),\n    id: contacts.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }\n  }));\n};\n\nconst ContactData = ({\n  deleteContact,\n  contacts,\n  goToEditMode\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, contacts.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, contacts.email), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, contacts.phoneNumber), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, contacts.position), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      deleteContact(contacts.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: goToEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Edit\"));\n};\n\nconst ContactEditForm = ({\n  updateContact,\n  endEditMode,\n  id\n}) => {\n  const submit = (values, {\n    setSubmitting\n  }) => {\n    values.id = id;\n    updateContact(values);\n    setSubmitting(false);\n    endEditMode();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: f.addContactsForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      status: ''\n    },\n    validate: addContactFormValidate,\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Save\"))));\n};\n\nconst addContactFormValidate = values => {\n  const errors = {};\n  return errors;\n};\n\nexport const ContactsSearchForm = ({\n  onFilterChanged\n}) => {\n  const submit = (values, {\n    setSubmitting\n  }) => {\n    onFilterChanged(values);\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      term: ''\n    },\n    validate: addContactFormValidate,\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"term\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Find\"))));\n};\nexport default Contacts;","map":{"version":3,"sources":["/home/butenin/dev/PracticeFrontend/Frontend/src/Components/PersonalArea/Contacts/Contacts.jsx"],"names":["React","useState","c","f","Field","Form","Formik","Contacts","deleteContact","contacts","updateContact","editMode","setEditMode","contactsContainer","id","ContactData","goToEditMode","name","email","phoneNumber","position","ContactEditForm","endEditMode","submit","values","setSubmitting","addContactsForm","status","addContactFormValidate","isSubmitting","errors","ContactsSearchForm","onFilterChanged","term"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,OAAOC,CAAP,MAAc,+CAAd;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAAkC,QAAlC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA;AAA1B,CAAD,KAA8C;AAC3D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAEC,CAAC,CAACW,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACF,QAAD,gBACO,oBAAC,WAAD;AAAa,IAAA,aAAa,EAAEH,aAA5B;AACa,IAAA,YAAY,EAAE,MAAMI,WAAW,CAAC,IAAD,CAD5C;AAEa,IAAA,QAAQ,EAAEH,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,gBAKK,oBAAC,eAAD;AAAiB,IAAA,aAAa,EAAEC,aAAhC;AACiB,IAAA,WAAW,EAAE,MAAME,WAAW,CAAC,KAAD,CAD/C;AAEiB,IAAA,EAAE,EAAIH,QAAQ,CAACK,EAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANV,CAFJ;AAeH,CAlBD;;AAoBA,MAAMC,WAAW,GAAG,CAAC;AAACP,EAAAA,aAAD;AAAgBC,EAAAA,QAAhB;AAA0BO,EAAAA;AAA1B,CAAD,KAA6C;AAC7D,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,QAAQ,CAACQ,IAAf,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMR,QAAQ,CAACS,KAAf,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMT,QAAQ,CAACU,WAAf,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMV,QAAQ,CAACW,QAAf,CAJJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACZ,MAAAA,aAAa,CAACC,QAAQ,CAACK,EAAV,CAAb;AAA2B,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,IAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,CADJ;AAUH,CAXD;;AAYA,MAAMK,eAAe,GAAG,CAAC;AAACX,EAAAA,aAAD;AAAgBY,EAAAA,WAAhB;AAA6BR,EAAAA;AAA7B,CAAD,KAAsC;AAC1D,QAAMS,MAAM,GAAG,CAACC,MAAD,EAAS;AAACC,IAAAA;AAAD,GAAT,KAA6B;AACxCD,IAAAA,MAAM,CAACV,EAAP,GAAYA,EAAZ;AACAJ,IAAAA,aAAa,CAACc,MAAD,CAAb;AACAC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,IAAAA,WAAW;AACd,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEnB,CAAC,CAACuB,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAET,MAAAA,IAAI,EAAE,EAAR;AAAYU,MAAAA,MAAM,EAAE;AAApB,KADnB;AAEI,IAAA,QAAQ,EAAEC,sBAFd;AAGI,IAAA,QAAQ,EAAEL,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKK,CAAC;AAAEM,IAAAA;AAAF,GAAD,kBACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,CANR,CADJ,CADJ;AAmBH,CA1BD;;AA2BA,MAAMD,sBAAsB,GAAIJ,MAAD,IAAY;AACvC,QAAMM,MAAM,GAAG,EAAf;AACA,SAAOA,MAAP;AACH,CAHD;;AAIA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAuB;AACrD,QAAMT,MAAM,GAAG,CAACC,MAAD,EAAS;AAACC,IAAAA;AAAD,GAAT,KAA6B;AACxCO,IAAAA,eAAe,CAACR,MAAD,CAAf;AACAC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KADnB;AAEI,IAAA,QAAQ,EAAEL,sBAFd;AAGI,IAAA,QAAQ,EAAEL,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKK,CAAC;AAAEM,IAAAA;AAAF,GAAD,kBACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CANR,CADJ,CADJ;AAkBH,CAxBM;AA0BP,eAAetB,QAAf","sourcesContent":["import React, {useState} from \"react\";\nimport c from \"./contacts.module.css\"\nimport f from \"../AddContactsForm/addContactsForm.module.css\";\nimport {Field, Form, Formik} from \"formik\";\n\nconst Contacts = ({deleteContact, contacts, updateContact}) => {\n    const [editMode, setEditMode] = useState(false)\n\n    return (\n\n        <div className={c.contactsContainer}>\n            {!editMode\n                ?   <ContactData deleteContact={deleteContact}\n                                 goToEditMode={() => setEditMode(true)}\n                                 contacts={contacts}\n                />\n                : <ContactEditForm updateContact={updateContact}\n                                   endEditMode={() => setEditMode(false)}\n                                   id = {contacts.id}\n                />\n            }\n        </div>\n    )\n}\n\nconst ContactData = ({deleteContact, contacts, goToEditMode}) => {\n    return (\n        <div>\n            <div>{contacts.name}</div>\n            <div>{contacts.email}</div>\n            <div>{contacts.phoneNumber}</div>\n            <div>{contacts.position}</div>\n            <button onClick={() => {deleteContact(contacts.id)}}>Delete</button>\n            <button onClick={goToEditMode}>Edit</button>\n        </div>\n    )\n}\nconst ContactEditForm = ({updateContact, endEditMode, id}) => {\n    const submit = (values, {setSubmitting}) => {\n        values.id = id\n        updateContact(values)\n        setSubmitting(false)\n        endEditMode()\n    }\n    return (\n        <div className={f.addContactsForm}>\n            <Formik\n                initialValues={{ name: '', status: ''}}\n                validate={addContactFormValidate}\n                onSubmit={submit}\n            >\n                {({ isSubmitting }) => (\n                    <Form>\n                        <Field type=\"text\" name=\"name\" />\n                        <Field type=\"text\" name=\"status\" />\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            Save\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\nconst addContactFormValidate = (values) => {\n    const errors = {}\n    return errors\n}\nexport const ContactsSearchForm = ({onFilterChanged}) => {\n    const submit = (values, {setSubmitting}) => {\n        onFilterChanged(values)\n        setSubmitting(false)\n    }\n\n    return (\n        <div>\n            <Formik\n                initialValues={{ term: ''}}\n                validate={addContactFormValidate}\n                onSubmit={submit}\n            >\n                {({ isSubmitting }) => (\n                    <Form>\n                        <Field type=\"text\" name=\"term\" />\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            Find\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\nexport default Contacts"]},"metadata":{},"sourceType":"module"}