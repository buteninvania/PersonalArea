{"ast":null,"code":"var _jsxFileName = \"/home/butenin/dev/PracticeFrontend/Frontend/src/Components/PersonalArea/ContactForms/Forms.jsx\";\nimport React from \"react\";\nimport f from \"./ContactsForm.module.css\";\nimport { Field, Form, Formik } from \"formik\";\nexport const AddContactsForm = ({\n  addContactSubmit\n}) => {\n  const submit = (values, {\n    setSubmitting\n  }) => {\n    addContactSubmit(values);\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: f.addContactsForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormContact, {\n    submit: submit,\n    name: \"Added\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }));\n};\nexport const ContactEditForm = ({\n  data,\n  updateContact,\n  endEditMode,\n  id\n}) => {\n  debugger;\n\n  const submit = (values, {\n    setSubmitting\n  }) => {\n    values.id = id;\n    updateContact(values);\n    setSubmitting(false);\n    endEditMode();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: f.contactsEditForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormContact, {\n    dataContact: data,\n    submit: submit,\n    name: 'Edit',\n    endEditMode: endEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n};\nexport const ContactsSearchForm = ({\n  onFilterChanged\n}) => {\n  const submit = (values, {\n    setSubmitting\n  }) => {\n    onFilterChanged(values);\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: f.contactsSearchForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      term: ''\n    },\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"term\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"Find\"))));\n};\n\nconst FormContact = ({\n  dataContact,\n  submit,\n  name,\n  endEditMode\n}) => {\n  debugger;\n  let initValue = {\n    name: '',\n    email: '',\n    phoneNumber: '',\n    position: ''\n  };\n\n  if (name === \"Edit\") {\n    initValue = {\n      name: dataContact.name,\n      email: dataContact.email,\n      phoneNumber: dataContact.phoneNumber,\n      position: dataContact.position\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initValue,\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, ({\n    isSubmitting,\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: f.name,\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    validate: validateName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), errors.name && touched.name ? /*#__PURE__*/React.createElement(\"div\", {\n    className: f.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 52\n    }\n  }, \" \", errors.name, \" \") : null, /*#__PURE__*/React.createElement(Field, {\n    className: f.email,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    validate: validateEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: f.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 54\n    }\n  }, \" \", errors.email, \" \") : null, /*#__PURE__*/React.createElement(Field, {\n    className: f.phone,\n    type: \"tel\",\n    name: \"phoneNumber\",\n    placeholder: \"Phone Number\",\n    validate: validateNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), errors.phoneNumber && touched.phoneNumber ? /*#__PURE__*/React.createElement(\"div\", {\n    className: f.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 66\n    }\n  }, \" \", errors.phoneNumber, \" \") : null, /*#__PURE__*/React.createElement(Field, {\n    className: f.position,\n    as: \"select\",\n    name: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"CTO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"CTO\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Project Manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Project Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Team Lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Team Lead\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Senior developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Senior developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Middle Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Middle Developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Junior Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Junior Developer\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, name === \"Added\" ? \"Add contact\" : \"Edit contact\"), name === 'Edit' ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: endEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 27\n    }\n  }, \"Back\") : null));\n};\n\nconst validateName = value => {\n  let errorMessage;\n\n  if (value === \"\") {\n    errorMessage = 'Введите имя';\n  } else if (value.length < 2) {\n    errorMessage = 'Имя контакта не менее 2 символов';\n  } else if (/[^a-zA-Zа-яА-Я]/.test(value)) {\n    errorMessage = 'В имени пользователя разрешены только a-z, A-Z, А-Я, а-я ';\n  }\n\n  return errorMessage;\n};\n\nconst validateEmail = value => {\n  let errorMessage;\n\n  if (value === \"\") {\n    errorMessage = 'Введите email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    errorMessage = 'Не валидный Email';\n  }\n\n  return errorMessage;\n};\n\nconst validateNumber = value => {\n  let errorMessage;\n\n  if (value === '') {\n    errorMessage = 'Введите номер телефона';\n  }\n\n  return errorMessage;\n};","map":{"version":3,"sources":["/home/butenin/dev/PracticeFrontend/Frontend/src/Components/PersonalArea/ContactForms/Forms.jsx"],"names":["React","f","Field","Form","Formik","AddContactsForm","addContactSubmit","submit","values","setSubmitting","addContactsForm","ContactEditForm","data","updateContact","endEditMode","id","contactsEditForm","ContactsSearchForm","onFilterChanged","contactsSearchForm","term","isSubmitting","FormContact","dataContact","name","initValue","email","phoneNumber","position","errors","touched","validateName","error","validateEmail","phone","validateNumber","value","errorMessage","length","test"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport f from \"./ContactsForm.module.css\"\nimport {Field, Form, Formik} from \"formik\";\n\n\nexport const AddContactsForm = ({addContactSubmit}) => {\n    const submit = (values, {setSubmitting}) => {\n        addContactSubmit(values)\n        setSubmitting(false)\n    }\n    return (\n        <div className={f.addContactsForm}>\n            <FormContact submit={submit} name={\"Added\"}/>\n        </div>\n    )\n}\nexport const ContactEditForm = ({data, updateContact, endEditMode, id}) => {\n    debugger\n    const submit = (values, {setSubmitting}) => {\n        values.id = id\n        updateContact(values)\n        setSubmitting(false)\n        endEditMode()\n    }\n    return (\n        <div className={f.contactsEditForm}>\n            <FormContact dataContact = {data} submit ={submit} name={'Edit'} endEditMode = {endEditMode}/>\n        </div>\n    )\n}\nexport const ContactsSearchForm = ({onFilterChanged}) => {\n    const submit = (values, {setSubmitting}) => {\n        onFilterChanged(values)\n        setSubmitting(false)\n    }\n\n    return (\n        <div className={f.contactsSearchForm}>\n            <Formik\n                initialValues={{ term: ''}}\n                onSubmit={submit}\n            >\n                {({ isSubmitting }) => (\n                    <Form>\n                        <Field type=\"text\" name=\"term\" />\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            Find\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\nconst FormContact = ({ dataContact, submit, name, endEditMode}) => {\n    debugger\n    let initValue = {\n        name: '',\n        email: '',\n        phoneNumber: '',\n        position: ''\n    }\n\n    if (name === \"Edit\") {\n        initValue = {\n            name: dataContact.name,\n            email: dataContact.email,\n            phoneNumber: dataContact.phoneNumber,\n            position: dataContact.position\n        }\n    }\n    return (\n        <Formik\n            initialValues={initValue}\n            onSubmit={submit}\n        >\n            {({ isSubmitting, errors, touched }) => (\n                <Form>\n                    <Field className={f.name} type=\"text\" name=\"name\" placeholder = \"Name\" validate={validateName} />\n                    {errors.name && touched.name ? <div className={f.error}> {errors.name} </div> : null}\n                    <Field className={f.email} type=\"email\" name=\"email\" placeholder = \"Email\" validate={validateEmail} />\n                    {errors.email && touched.email ? <div className={f.error}> {errors.email} </div> : null}\n                    <Field className={f.phone} type=\"tel\" name=\"phoneNumber\" placeholder = \"Phone Number\" validate={validateNumber}/>\n                    {errors.phoneNumber && touched.phoneNumber ? <div className={f.error}> {errors.phoneNumber} </div> : null}\n                    <Field className={f.position} as=\"select\" name=\"position\">\n                        <option value=\"Owner\">Owner</option>\n                        <option value=\"CTO\">CTO</option>\n                        <option value=\"Project Manager\">Project Manager</option>\n                        <option value=\"Team Lead\">Team Lead</option>\n                        <option value=\"Senior developer\">Senior developer</option>\n                        <option value=\"Middle Developer\">Middle Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                    </Field>\n                    <button type=\"submit\" disabled={isSubmitting}>\n                        {name === \"Added\"\n                            ? \"Add contact\"\n                            : \"Edit contact\"\n                        }\n                    </button>\n                    {name === 'Edit'\n                        ? <button onClick={endEditMode}>Back</button>\n                        : null\n                    }\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nconst validateName = (value) => {\n    let errorMessage\n    if (value === \"\") {\n        errorMessage = 'Введите имя';\n    }  else if (value.length < 2 ) {\n        errorMessage = 'Имя контакта не менее 2 символов';\n    }   else if (/[^a-zA-Zа-яА-Я]/.test(value)) {\n        errorMessage = 'В имени пользователя разрешены только a-z, A-Z, А-Я, а-я ';\n    }\n    return errorMessage\n}\nconst validateEmail = (value) => {\n    let errorMessage\n    if(value === \"\") {\n        errorMessage = 'Введите email';\n    }\n    else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        errorMessage = 'Не валидный Email';\n    }\n    return errorMessage\n}\nconst validateNumber = (value) => {\n    let errorMessage\n    if(value === '') {\n        errorMessage = 'Введите номер телефона';\n    }\n    return errorMessage\n}\n"]},"metadata":{},"sourceType":"module"}